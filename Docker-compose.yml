version: "3.9"

services:
  app:
    build:
      context: .
    ports:
      - "8056:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    restart: on-failure
    depends_on:
      - db
    command: >
      sh -c "python manage.py db_waiting && python manage.py base_setup && gunicorn configs.wsgi --bind 0.0.0.0:8000"
  db:
    image: mysql:8
    ports:
      - "3344:3306"
    env_file:
      - .env
    restart: on-failure
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - ./mysql:/var/lib/mysql

  web:
    image: nginx:alpine
    ports:
      - "80:80"
    restart: on-failure
    volumes:
      - ./client:/usr/share/nginx/html
      - ./backend/static:/usr/share/nginx/html/doc
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/storage:/usr/share/nginx/static

  redis:
    image: redis:alpine
    restart: on-failure

  celery:
    build:
      context: .
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - app
      - db
    restart: on-failure
    command: >
      sh -c "celery -A configs worker -l info -B"